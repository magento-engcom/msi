<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="ElasticSearchLayeredNavigationCustomStockTest">
        <annotations>
            <stories value="Elasticsearch layered navigation on custom stock"/>
            <title value="Elasticsearch layered navigation simple product on custom stock."/>
            <description value="Verify, Category page and Layered Navigation for Simple Products on custom stock with Elasticsearch enabled."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/441590/scenarios/2688239"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
            <group value="SearchEngineElasticsearch"/>
        </annotations>

        <before>
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <createData entity="Msi_US_Customer" stepKey="customer"/>

            <createData entity="FullSource1" stepKey="customSource"/>
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="customStock"/>
            <createData entity="SourceStockLinked1" stepKey="stockSourceLink">
                <requiredEntity createDataKey="customStock"/>
                <requiredEntity createDataKey="customSource"/>
            </createData>
            <actionGroup ref="LoginAsAdmin" stepKey="loginToAdminArea"/>
            <createData entity="SimpleProduct" stepKey="simpleProduct">
                <requiredEntity createDataKey="category"/>
            </createData>
            <amOnPage url="{{AdminProductEditPage.url($$simpleProduct.id$$)}}" stepKey="openProductEditPageToAssignSource"/>
            <actionGroup ref="AdminAssignSourceToProductAndSetSourceQuantityActionGroup" stepKey="assignUSSource1ToCreatedProduct">
                <argument name="sourceCode" value="$$customSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="UnassignSourceFromProductActionGroup" stepKey="unassignDefaultSourceFromProduct">
                <argument name="sourceCode" value="{{_defaultSource.name}}"/>
            </actionGroup>
            <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct1"/>

            <createData entity="SimpleProduct" stepKey="simpleProduct2">
                <field key="price">40.00</field>
                <requiredEntity createDataKey="category"/>
            </createData>
            <amOnPage url="{{AdminProductEditPage.url($$simpleProduct2.id$$)}}" stepKey="openProductEditPageToAssignSource2"/>
            <actionGroup ref="AdminAssignSourceToProductAndSetSourceQuantityActionGroup" stepKey="assignUSSource1ToCreatedProduct2">
                <argument name="sourceCode" value="$$customSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="UnassignSourceFromProductActionGroup" stepKey="unassignDefaultSourceFromProduct2">
                <argument name="sourceCode" value="{{_defaultSource.name}}"/>
            </actionGroup>
            <actionGroup ref="SaveProductFormActionGroup" stepKey="saveProduct2"/>
            <actionGroup ref="CliRunReindexUsingCronJobsActionGroup" stepKey="reindexInvalidatedIndices"/>
        </before>
        <after>
            <!-- Assign Main Website to Default Stock -->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
            <actionGroup ref="DisableAllSourcesActionGroup" stepKey="disableAllSources"/>
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteProduct2"/>
            <deleteData createDataKey="customStock" stepKey="deleteCustomStock"/>
            <magentoCron groups="index" stepKey="reindexInvalidatedIndices"/>
            <actionGroup ref="logout" stepKey="logoutOfAdmin1"/>
        </after>

        <!--Verify products are visible on storefront page.-->
        <amOnPage url="{{StorefrontCategoryPage.url($$category.name$$)}}" stepKey="navigateToCategoryToVerifyProductsAreVisible"/>
        <waitForPageLoad time="30" stepKey="waitForCategoryPageIsLoadToVerifyProductIsNotVisible"/>
        <see userInput="$$simpleProduct.name$$" stepKey="verifyProduct1IsVisible"/>
        <see userInput="$$simpleProduct2.name$$" stepKey="verifyProduct2IsVisible"/>
        <!--Verify prices in layered navigation.-->
        <click selector="{{StorefrontLayeredNavigationSection.shoppingOptionsByName('Price')}}" stepKey="openLayeredNavigation"/>
        <see userInput="$10.00 - $19.99" selector="//a[contains(@href, 'price=10-20')]" stepKey="verifySmallerPriceRange"/>
        <see userInput="40.00 and above" selector="//a[contains(@href, 'price=40')]" stepKey="verifyLargerPriceRange"/>
    </test>
</tests>
