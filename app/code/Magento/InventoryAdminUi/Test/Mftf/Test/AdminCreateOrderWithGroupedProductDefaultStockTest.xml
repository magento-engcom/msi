<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="../../../../../../../dev/tests/acceptance/vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="AdminCreateOrderWithGroupedProductDefaultStockTest">
        <annotations>
            <features value="Multi-Source Inventory"/>
            <stories value="Create order with grouped product on default stock from admin area."/>
            <title value="Create order with grouped product on default stock from admin area"/>
            <description value="Check, admin user able to create order with grouped product on default stock from admin area."/>
            <testCaseId value="1319"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <magentoCLI command="config:set cataloginventory/item_options/manage_stock 1" stepKey="magentoCLI1"/>
            <createData entity="FullSource1" stepKey="customSource"/>
            <createData entity="BasicMsiStock1" stepKey="customStock"/>
            <createData entity="SourceStockLinked1" stepKey="stockSourceLink">
                <requiredEntity createDataKey="customStock"/>
                <requiredEntity createDataKey="customSource"/>
            </createData>
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <createData entity="Msi_US_Customer" stepKey="customer"/>

            <actionGroup ref="LoginAsAdmin" stepKey="loginToAdminArea"/>
            <waitForPageLoad stepKey="waitForDashboardLoad"/>

            <comment userInput="Assign Default Stock to Main Website " stepKey="assignDefaultStockToMainWebsiteComment"/>
            <amOnPage url="{{AdminManageStockPage.url}}" stepKey="navigateToStockListPage"/>
            <waitForPageLoad time="30" stepKey="waitForStockListPageLoad"/>
            <actionGroup ref="searchAdminDataGridByKeyword" stepKey="searchDefaultStockByName">
                <argument name="keyword" value="_defaultStock.name"/>
            </actionGroup>
            <click selector="{{AdminGridRow.editByValue(_defaultStock.name)}}" stepKey="clickEditDefaultStock"/>
            <waitForPageLoad time="30" stepKey="waitFroDefaultStockEditPageLoad"/>
            <selectOption selector="{{AdminEditStockSalesChannelsSection.websites}}" userInput="Main Website" stepKey="selectDefaultWebsiteAsSalesChannelForDefaultStock"/>
            <click selector="{{AdminGridMainControls.saveAndContinue}}" stepKey="saveDefaultStock"/>

            <comment userInput="Perform reindex and cache flush after assign default stock to main website." stepKey="reindexCacheFlushAfterAssignDefaultStockToMainWebsite"/>
            <magentoCLI command="indexer:reindex" stepKey="performReindex"/>
            <magentoCLI command="cache:flush" stepKey="cleanCache"/>

            <createData entity="VirtualProduct" stepKey="virtualProduct"/>
            <createData entity="SimpleProduct" stepKey="simpleProduct">
                <requiredEntity createDataKey="category"/>
            </createData>
        </before>
        <after>
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableCreatedCustomSource">
                <argument name="sourceCode" value="$$customSource.source[source_code]$$"/>
            </actionGroup>

            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="customStock" stepKey="deleteCustomStock"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="virtualProduct" stepKey="deleteVirtualProduct"/>

            <comment userInput="Clean up grouped product." stepKey="cleanUpGroupedProductComment"/>
            <actionGroup ref="deleteProductUsingProductGrid" stepKey="deleteGroupedProduct">
                <argument name="product" value="GroupedProduct"/>
            </actionGroup>

            <actionGroup ref="logout" stepKey="logoutFromAdminArea"/>
        </after>

        <comment userInput="Create grouped product." stepKey="createGroupedProductComment"/>
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndex"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <actionGroup ref="resetProductGridToDefaultView" stepKey="resetProductGridColumnsInitial"/>
        <actionGroup ref="goToCreateProductPage" stepKey="goToCreateProduct">
            <argument name="product" value="GroupedProduct"/>
        </actionGroup>
        <actionGroup ref="fillGroupedProductForm" stepKey="fillProductForm">
            <argument name="product" value="GroupedProduct"/>
        </actionGroup>

        <comment userInput="Add simple and virtual products to grouped product." stepKey="assignSimpleAndVirtualToGroupedProductComment"/>
        <scrollToTopOfPage stepKey="scrollToTopOfPage1"/>
        <scrollTo selector="{{AdminProductFormGroupedProductsSection.toggleGroupedProduct}}" x="0" y="-100" stepKey="scrollToGroupedSection"/>
        <conditionalClick selector="{{AdminProductFormGroupedProductsSection.toggleGroupedProduct}}" dependentSelector="{{AdminProductFormGroupedProductsSection.addProductsToGroup}}" visible="false" stepKey="openGroupedProductsSection"/>
        <click selector="body" stepKey="clickBodyToCorrectFocusGrouped"/>
        <click selector="{{AdminProductFormGroupedProductsSection.addProductsToGroup}}" stepKey="clickAddProductsToGroupToAddSimpleProduct"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad2"/>
        <waitForElementVisible selector="{{AdminAddProductsToGroupPanel.filters}}" stepKey="waitForGroupedProductModalTaAddSimpleProduct"/>
        <actionGroup ref="filterProductGridBySku2" stepKey="filterGroupedProductsToFindSimpleProduct">
            <argument name="sku" value="$$simpleProduct.sku$$"/>
        </actionGroup>
        <waitForPageLoad time="30" stepKey="waitForPageLoad3"/>

        <checkOption selector="{{AdminAddProductsToGroupPanel.nThCheckbox('0')}}" stepKey="selectSimpleProduct"/>
        <click selector="{{AdminAddProductsToGroupPanel.addSelectedProducts}}" stepKey="addSimpleProduct"/>
        <click selector="{{AdminProductFormGroupedProductsSection.addProductsToGroup}}" stepKey="clickAddProductsToGroupToAddVirtualProduct"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad4"/>
        <waitForElementVisible selector="{{AdminAddProductsToGroupPanel.filters}}" stepKey="waitForGroupedProductModalToAddVirtualProduct"/>
        <actionGroup ref="filterProductGridBySku2" stepKey="filterGroupedProductsToFindVirtualProduct">
            <argument name="sku" value="$$virtualProduct.sku$$"/>
        </actionGroup>
        <waitForPageLoad time="30" stepKey="waitForPageLoad5"/>
        <checkOption selector="{{AdminAddProductsToGroupPanel.nThCheckbox('0')}}" stepKey="selectVirtualProduct"/>
        <click selector="{{AdminAddProductsToGroupPanel.addSelectedProducts}}" stepKey="addVirtualProduct"/>

        <scrollToTopOfPage stepKey="scrollToTopOfPage2"/>
        <comment userInput="Assign category to product." stepKey="assignCategoryComment"/>
        <searchAndMultiSelectOption selector="{{AdminProductFormSection.categoriesDropdown}}" parameterArray="[$$category.name$$]"  stepKey="searchAndSelectCategory"/>

        <actionGroup ref="AdminFormSaveAndClose" stepKey="saveAndCloseCreatedGroupedProduct"/>

        <comment userInput="Create order with grouped product from admin area." stepKey="createOrderWithGroupedProductComment"/>
        <actionGroup ref="navigateToNewOrderPageExistingCustomer" stepKey="createNewOrderForCustomer">
            <argument name="customer" value="$$customer$$"/>
        </actionGroup>

        <conditionalClick selector="#store_1" dependentSelector="#order-store-selector" visible="true" stepKey="clickOnDefaultStoreViewIfPresent1"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad6"/>

        <comment userInput="Add grouped product to order." stepKey="addGroupedProductToOrderComment"/>
        <actionGroup ref="addGroupedProductOptionToOrder" stepKey="addGroupedProductSimpleOptionToOrder">
            <argument name="product" value="GroupedProduct"/>
            <argument name="option" value="$$simpleProduct$$"/>
            <argument name="quantity" value="2"/>
        </actionGroup>

        <scrollToTopOfPage stepKey="scrollToTopOfPage3"/>
        <actionGroup ref="addGroupedProductOptionToOrder" stepKey="addGroupedProductVirtualOptionToOrder">
            <argument name="product" value="GroupedProduct"/>
            <argument name="option" value="$$virtualProduct$$"/>
            <argument name="quantity" value="2"/>
        </actionGroup>

        <comment userInput="Select shipping method and check grand total and shipping cost." stepKey="selectShippingMethodComment"/>
        <actionGroup ref="orderSelectFlatRateShipping" stepKey="selectFlatRateShipping"/>
        <see selector="{{AdminOrderFormTotalSection.total('Subtotal')}}" userInput="$445.98" stepKey="seeOrderSubTotal"/>
        <see selector="{{AdminOrderFormTotalSection.total('Shipping')}}" userInput="$10.00" stepKey="seeOrderShipping"/>
        <see selector="{{AdminOrderFormTotalSection.grandTotal}}" userInput="$455.98" stepKey="seeCorrectGrandTotal"/>

        <comment userInput="Submit order." stepKey="submitOrderComment"/>
        <click selector="{{AdminOrderFormActionSection.SubmitOrder}}" stepKey="clickSubmitOrder"/>
        <seeInCurrentUrl url="{{AdminOrderDetailsPage.url}}" stepKey="seeViewOrderPage"/>

        <comment userInput="Check simple product quantity and salable quantity." stepKey="checkSimpleProductQuantityComment"/>
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndexPageForCheckSimpleProductQtyAfterPlaceOrder"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findSimpleProductBySkuToCheckQtyAfterPlaceOrder">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$$simpleProduct.sku$$"/>
        </actionGroup>
        <see selector="{{AdminProductGridSection.productQtyPerSource('1',_defaultSource.name)}}" userInput="1000" stepKey="checkSimpleProductSourceQtyAfterPlaceOrder"/>
        <see selector="{{AdminProductGridSection.productSalableQty('1',_defaultStock.name)}}" userInput="998" stepKey="checkSimpleProductSalableQtyAfterPlaceOrder"/>

        <comment userInput="Check virtual product quantity and salable quantity." stepKey="checkVirtualProductQuantityComment"/>
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndexPageForCheckVirtualProductQtyAfterPlaceOrder"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findVirtualProductBySkuToCheckQtyAfterPlaceOrder">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$$virtualProduct.sku$$"/>
        </actionGroup>
        <see selector="{{AdminProductGridSection.productQtyPerSource('1',_defaultSource.name)}}" userInput="1000" stepKey="checkVirtualProductSourceQtyAfterPlaceOrder"/>
        <see selector="{{AdminProductGridSection.productSalableQty('1',_defaultStock.name)}}" userInput="998" stepKey="checkVirtualProductSalableQtyAfterPlaceOrder"/>
    </test>
</tests>
