<?xml version="1.0"?>
<!--
/**
 * Copyright Â© Magento, Inc. All rights reserved.
 * See COPYING.txt for license details.
 */
-->
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <type name="Magento\Sales\Api\OrderRepositoryInterface">
        <plugin name="get_pickup_location_for_order" type="Magento\InventoryInStorePickup\Plugin\Sales\Order\GetPickupLocationForOrderPlugin"/>
        <plugin name="save_pickup_location_for_order" type="Magento\InventoryInStorePickup\Plugin\Sales\Order\SavePickupLocationForOrderPlugin"/>
    </type>
    <type name="Magento\InventoryApi\Api\SourceRepositoryInterface">
        <plugin name="load_in_store_pickup_on_get_list" type="Magento\InventoryInStorePickup\Plugin\InventoryApi\SourceRepository\LoadInStorePickupOnGetListPlugin"/>
        <plugin name="load_in_store_pickup_on_get" type="Magento\InventoryInStorePickup\Plugin\InventoryApi\SourceRepository\LoadInStorePickupOnGetPlugin"/>
        <plugin name="save_in_store_pickup_links" type="Magento\InventoryInStorePickup\Plugin\InventoryApi\SourceRepository\SaveInStorePickupPlugin"/>
    </type>
    <preference for="Magento\InventoryInStorePickupApi\Api\GetNearbySourcesByPostcodeInterface" type="Magento\InventoryInStorePickup\Model\GetNearbySourcesByPostcode"/>
    <preference for="Magento\InventoryInStorePickupApi\Api\Data\PickupLocationInterface" type="Magento\InventoryInStorePickup\Model\PickupLocation" />
    <preference for="Magento\InventoryInStorePickupApi\Api\GetNearbyPickupLocationsInterface" type="Magento\InventoryInStorePickup\Model\GetNearbyPickupLocations"/>
    <preference for="Magento\InventoryInStorePickupApi\Api\Data\SearchCriteriaInterface" type="Magento\InventoryInStorePickup\Model\SearchCriteria" />
    <preference for="Magento\InventoryInStorePickupApi\Api\GetPickupLocationsAssignedToSalesChannelInterface" type="Magento\InventoryInStorePickup\Model\GetPickupLocationsAssignedToSalesChannel" />
    <preference for="Magento\InventoryInStorePickupApi\Api\GetIsAnyPickupLocationAvailableInterface" type="Magento\InventoryInStorePickup\Model\GetIsAnyPickupLocationAvailable"/>

    <preference for="Magento\InventoryInStorePickupApi\Api\NotifyOrderIsReadyForPickupInterface" type="Magento\InventoryInStorePickup\Model\NotifyOrderIsReadyForPickup"/>
    <preference for="Magento\InventoryInStorePickupApi\Api\IsOrderReadyForPickupInterface" type="Magento\InventoryInStorePickup\Model\IsOrderReadyForPickup"/>
    <type name="Magento\InventoryInStorePickup\Model\Order\Email\ReadyForPickupSender">
        <arguments>
            <argument name="identityContainer" xsi:type="object">\Magento\InventoryInStorePickup\Model\Order\Email\Container\ReadyForPickupIdentity</argument>
        </arguments>
    </type>
    <type name="Magento\InventoryInStorePickupApi\Model\Mapper">
        <arguments>
            <argument name="map" xsi:type="array">
                <item name="extension_attributes.frontend_name" xsi:type="string">name</item>
                <item name="extension_attributes.frontend_description" xsi:type="string">description</item>
            </argument>
            <argument name="preProcessors" xsi:type="array">
                <item name="extension_attributes.frontend_name" xsi:type="object">Magento\InventoryInStorePickup\Model\PickupLocation\Mapper\PreProcessor\FrontendName</item>
            </argument>
        </arguments>
    </type>
    <type name="Magento\InventoryInStorePickup\Model\SourceSelection\GetActiveStorePickupOrdersBySource">
        <arguments>
            <argument name="statesToFilter" xsi:type="array">
                <item xsi:type="const" name="complete">Magento\Sales\Model\Order::STATE_COMPLETE</item>
                <item xsi:type="const" name="closed">Magento\Sales\Model\Order::STATE_CLOSED</item>
                <item xsi:type="const" name="canceled">Magento\Sales\Model\Order::STATE_CANCELED</item>
            </argument>
        </arguments>
    </type>
    <preference for="Magento\InventorySourceSelectionApi\Model\GetSourceItemQtyAvailableInterface" type="Magento\InventoryInStorePickup\Model\SourceSelection\GetSourceItemQtyAvailableService"/>
    <preference for="Magento\InventoryInStorePickupApi\Api\IsStorePickupOrderInterface" type="Magento\InventoryInStorePickup\Model\IsStorePickupOrder" />
</config>
